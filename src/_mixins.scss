// disable preset opacity: not readable
@mixin make-disabled-form-readable-input {
  :host {
    .p-inputtext.p-component:disabled {
      opacity: unset;
    }
  }
}
@mixin make-disabled-form-readable-dropdown {
  :host ::ng-deep {
    .p-dropdown.p-component.p-disabled {
      opacity: unset;
    }
  }
}

@mixin compact-dropdown-list-items {
  :host ::ng-deep {
    .p-dropdown-panel .p-dropdown-items .p-dropdown-item {
      padding: 0.4rem 1rem !important;
    }
  }
}

@mixin invisible {
  :host ::ng-deep {
    .invisible {
      visibility: hidden;
    }
  }
}

@mixin danger-action {
  :host ::ng-deep {
    .danger-action-text {
      color: var(--danger-button-bg);
    }
    .danger-action-bg {
      color: white;
      background-color: var(--danger-button-bg);
    }
  }
}

@mixin input-clear-icon {
  .p-input-icon-right > a:last-of-type {
    right: 0.75rem;
    color: var(--emphasis-medium);
  }
  .p-input-icon-left > a,
  .p-input-icon-right > a {
    position: absolute;
    top: 50%;
    margin-top: -0.5rem;
  }
}

@mixin correct-data-view-control {
  :host ::ng-deep {
    .data-view-control,
    .data-view-control * {
      color: var(--emphasis-medium);
    }
    .data-view-control-border.p-dropdown {
      .p-inputtext {
        color: var(--emphasis-medium);
        opacity: 0.9;
      }
      &:last-of-type {
        border-top-left-radius: var(--border-radius);
        border-bottom-left-radius: var(--border-radius);
      }
    }
  }
}

@mixin correct-search-criteria {
  :host ::ng-deep {
    .search-criteria-container > div {
      display: flex;
      flex-wrap: wrap;
      align-content: center;
      row-gap: 1rem;
      column-gap: 3rem;
      .search-criteria-buttons {
        flex-wrap: wrap;
        align-content: center;
        margin-top: unset;
      }
    }
  }
}

@mixin dataview-list-zebra-rows {
  :host ::ng-deep {
    .p-dataview-list .p-dataview-content .p-grid > div {
      &:nth-child(odd) {
        background-color: #f8f9fa;
      }
    }
  }
}

@mixin correct-modal-dialog {
  :host ::ng-deep {
    .p-dialog .p-dialog-content {
      border-bottom-left-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }
  }
}
@mixin non-full-size-modal-dialog {
  :host ::ng-deep {
    @media (max-width: 991px) {
      .p-dialog.p-dialog {
        max-height: unset !important;
        height: unset !important;
      }
    }
  }
}

@mixin table-inline-buttons {
  :host ::ng-deep {
    // reduce the size of buttons used inside a table row
    th button.p-button,
    td button.p-button {
      &.p-button-icon-only {
        width: unset !important;
      }
      &.p-button-rounded {
        height: unset !important;
      }
      &:disabled {
        opacity: 0.38 !important;
      }
    }
  }
}

@mixin footer-buttons {
  :host ::ng-deep {
    .p-dialog .p-dialog-footer button {
      margin: 0;
    }
  }
}

@mixin correct-autocomplete {
  :host ::ng-deep {
    .p-autocomplete-panel .p-autocomplete-items .p-autocomplete-item {
      padding-top: 0.4rem;
      padding-bottom: 0.4rem;
      &:nth-child(odd) {
        background-color: #f8f9fa;
      }
    }
    .p-autocomplete-clear-icon {
      /* fix for bug in PrimeNG */
      right: 3.5rem;
    }
    .p-autocomplete .p-autocomplete-loader {
      /* fix for bug in PrimeNG */
      display: none;
    }
    .p-autocomplete-input.p-inputtext.p-autocomplete-dd-input {
      border-bottom-right-radius: unset;
      border-top-right-radius: unset;
    }
    .p-autocomplete-dropdown.p-button-icon-only.p-button {
      border-bottom-left-radius: unset;
      border-top-left-radius: unset;
    }
  }
}

@mixin layout-topbar-items {
  :host ::ng-deep {
    .layout-topbar-item {
      button {
        color: var(--topbar-item-text-color);
        background-color: var(--topbar-bg-color);
        &:hover,
        &:focus {
          color: var(--topbar-item-text-hover-color);
          background-color: var(--topbar-item-text-hover-bg-color);
          transition: background-color var(--transition-duration);
        }
      }
    }
  }
}

@mixin listbox-zebra-rows {
  :host ::ng-deep {
    .p-listbox:not(.p-disabled) .p-listbox-item:not(.p-highlight):not(.p-disabled) {
      &:nth-child(odd) {
        background-color: #f8f9fa;
      }
    }
  }
}

@mixin correct-file-upload {
  :host ::ng-deep {
    .p-fileupload {
      .p-fileupload-buttonbar,
      .p-fileupload-content {
        background-color: var(--surface-100) !important;
      }
      .p-fileupload-content {
        padding: 0.5rem;
        .p-fileupload-row {
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
          gap: 0;
          > div {
            width: unset;
            &.p-fileupload-filename {
              max-width: 25rem;
            }
          }
        }
      }
    }
  }
}

@mixin displaying-text-responsive {
  :host ::ng-deep {
    .text-responsive {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}
